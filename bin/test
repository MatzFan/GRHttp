#!/usr/bin/env ruby

require 'pathname'
Root ||= Pathname.new(File.dirname(__FILE__)).expand_path
Dir.chdir Root.join('..').to_s
require "bundler/setup"
require "grhttp"

# ~/ruby/wrk/wrk -c400 -d10 -t12 http://localhost:3000/ctrl
# ab -n 10000 -c 200 -k http://127.0.0.1:3000/

module MyServer
    module_function
    def call request, response
      return false if request.path == '/refuse'
      if request.path == '/stream'
        response.stream_async do
          sleep 1
          response << "Hello Streaming\r\n"
          response.stream_async do
              sleep 1
              response << "Goodbye Streaming"
          end
        end
        return true
      end
      response << 'Hello my World!'#  request.to_s
      true
    end
    def on_open ws
      @first ||= ws.uuid
      ws.autopong 40
      ws << "System: Hello!"

      if ws.uuid == @first
        ws << "System: You're the first one here, so you get special notifications :-)"
      else
        ws.unicast @first, "System: Someone just joind the chat"
      end
    end
    def on_message ws
      ws << "You: #{ws.data}"
      ws.broadcast "Someone: #{ws.data}"
    end
    def on_broadcast ws
        ws << ws.data
        true
    end
    def on_close ws
      puts 'WebSocket Closed!'
      ws.unicast @first, "System: Someone just left the chat"
    end
end

upgrade_handler = Proc.new {|i, o| MyServer unless i.path == '/refuse'}

# GR::Settings.set_forking 4

# GR.create_logger nil

GRHttp.start do
    GRHttp.listen upgrade_handler: upgrade_handler, http_handler: MyServer
end

# GRHttp.start {   GRHttp.listen {|request, response| 'Hello World!' }      }
